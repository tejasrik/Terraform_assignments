Using Terraform to Create a RandomID and S3 Buckets

Create the Main file:-
Create the main.tf Terraform file.
Add a provider, aws.
Set the region to use a variable called aws_region.
Add a random_id resource and name it tf_bucket_id.
Set the byte_length to 2.

Add a resource, aws_s3_bucket, and name it tf_code.
The bucket name will be set using a variable called project_name, followed by a -, and will use the dec attribute from tf_bucket_id.
Set the acl to private.
Set force_destroy to true.
Create a tag with a name to tf_bucket.

Create the Variables File:-
Create the variables.tf Terraform file.
Add a variable called aws_region.
Set the default to us-east-1. Add a variable called project_name.
Set the default to la-terraform.

Create the outputs file:-
Create the outputs.tf Terraform file.
Add a output called bucketname.
The value should be set to id, coming from tf_code.

Deploy the infrastructure:-
Initialize Terraform.
Validate the files.
Deploy the S3 bucket.
**********************************************************************
nano variables.tf
variable "aws_region" {
  default = "us-east-2"
}

variable "project_name" {
  default = "la-terraform"
}
nano main.tf

provider "aws" {
 access_key = "ACCESS_KEY_HERE"
 secret_key = "SECRET_KEY_HERE"
region = "${var.aws_region}"
}

resource "random_id" "tf_bucket_id" {
byte_length = 2
}

resource "aws_s3_bucket" "tf_code"{
 bucket = "${var.project_name}-${random_id.tf_bucket_id.dec}"
 acl    = "private"
 force_destroy = true
 tags = {
    name = "tf_bucket"
  }
}

nano outputs.tf
output "bucket_name" {
value = "${aws_s3_bucket.tf_code.id}"
}

HP@LAPTOP-HR36TFDC MINGW64 ~$ terraform plan
Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.


------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_s3_bucket.tf_code will be created
  + resource "aws_s3_bucket" "tf_code" {
      + acceleration_status         = (known after apply)
      + acl                         = "private"
      + arn                         = (known after apply)
      + bucket                      = (known after apply)
      + bucket_domain_name          = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = true
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags                        = {
          + "name" = "tf_bucket"
        }
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + versioning {
          + enabled    = (known after apply)
          + mfa_delete = (known after apply)
        }
    }

  # random_id.tf_bucket_id will be created
  + resource "random_id" "tf_bucket_id" {
      + b64         = (known after apply)
      + b64_std     = (known after apply)
      + b64_url     = (known after apply)
      + byte_length = 2
      + dec         = (known after apply)
      + hex         = (known after apply)
      + id          = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Warning: Interpolation-only expressions are deprecated

  on main.tf line 4, in provider "aws":
   4:   region = "${var.aws_region}"

Terraform 0.11 and earlier required all non-constant expressions to be
provided via interpolation syntax, but this pattern is now deprecated. To
silence this warning, remove the "${ sequence from the start and the }"
sequence from the end of this expression, leaving just the inner expression.

Template interpolation syntax is still used to construct strings from
expressions when the template includes multiple interpolation sequences or a
mixture of literal strings and interpolations. This deprecation applies only
to templates that consist entirely of a single interpolation sequence.


------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.

[centos@ip-10-0-1-83 tf]$ terraform apply

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_s3_bucket.tf_code will be created
  + resource "aws_s3_bucket" "tf_code" {
      + acceleration_status         = (known after apply)
      + acl                         = "private"
      + arn                         = (known after apply)
      + bucket                      = (known after apply)
      + bucket_domain_name          = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = true
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags                        = {
          + "name" = "tf_bucket"
        }
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + versioning {
          + enabled    = (known after apply)
          + mfa_delete = (known after apply)
        }
    }

  # random_id.tf_bucket_id will be created
  + resource "random_id" "tf_bucket_id" {
      + b64         = (known after apply)
      + b64_std     = (known after apply)
      + b64_url     = (known after apply)
      + byte_length = 2
      + dec         = (known after apply)
      + hex         = (known after apply)
      + id          = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.


Warning: Interpolation-only expressions are deprecated

  on main.tf line 4, in provider "aws":
   4:   region = "${var.aws_region}"

Terraform 0.11 and earlier required all non-constant expressions to be
provided via interpolation syntax, but this pattern is now deprecated. To
silence this warning, remove the "${ sequence from the start and the }"
sequence from the end of this expression, leaving just the inner expression.

Template interpolation syntax is still used to construct strings from
expressions when the template includes multiple interpolation sequences or a
mixture of literal strings and interpolations. This deprecation applies only
to templates that consist entirely of a single interpolation sequence.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

random_id.tf_bucket_id: Creating...
random_id.tf_bucket_id: Creation complete after 0s [id=hok]
aws_s3_bucket.tf_code: Creating...
aws_s3_bucket.tf_code: Creation complete after 1s [id=la-terraform-34441]

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

bucket_name = la-terraform-34441
[centos@ip-10-0-1-83 tf]$ terraform destroy
random_id.tf_bucket_id: Refreshing state... [id=hok]
aws_s3_bucket.tf_code: Refreshing state... [id=la-terraform-34441]

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # aws_s3_bucket.tf_code will be destroyed
  - resource "aws_s3_bucket" "tf_code" {
      - acl                         = "private" -> null
      - arn                         = "arn:aws:s3:::la-terraform-34441" -> null
      - bucket                      = "la-terraform-34441" -> null
      - bucket_domain_name          = "la-terraform-34441.s3.amazonaws.com" -> null
      - bucket_regional_domain_name = "la-terraform-34441.s3.us-east-2.amazonaws.com" -> null
      - force_destroy               = true -> null
      - hosted_zone_id              = "Z2O1EMRO9K5GLX" -> null
      - id                          = "la-terraform-34441" -> null
      - region                      = "us-east-2" -> null
      - request_payer               = "BucketOwner" -> null
      - tags                        = {
          - "name" = "tf_bucket"
        } -> null

      - versioning {
          - enabled    = false -> null
          - mfa_delete = false -> null
        }
    }

  # random_id.tf_bucket_id will be destroyed
  - resource "random_id" "tf_bucket_id" {
      - b64         = "hok" -> null
      - b64_std     = "hok=" -> null
      - b64_url     = "hok" -> null
      - byte_length = 2 -> null
      - dec         = "34441" -> null
      - hex         = "8689" -> null
      - id          = "hok" -> null
    }

Plan: 0 to add, 0 to change, 2 to destroy.


Warning: Interpolation-only expressions are deprecated

  on main.tf line 4, in provider "aws":
   4:   region = "${var.aws_region}"

Terraform 0.11 and earlier required all non-constant expressions to be
provided via interpolation syntax, but this pattern is now deprecated. To
silence this warning, remove the "${ sequence from the start and the }"
sequence from the end of this expression, leaving just the inner expression.

Template interpolation syntax is still used to construct strings from
expressions when the template includes multiple interpolation sequences or a
mixture of literal strings and interpolations. This deprecation applies only
to templates that consist entirely of a single interpolation sequence.

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

aws_s3_bucket.tf_code: Destroying... [id=la-terraform-34441]
aws_s3_bucket.tf_code: Destruction complete after 0s
random_id.tf_bucket_id: Destroying... [id=hok]
random_id.tf_bucket_id: Destruction complete after 0s

Destroy complete! Resources: 2 destroyed.
